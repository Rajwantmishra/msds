plt(rnorm(100,sd=.2))
plot(rnorm(100,sd=.2))
bar_plot(rnorm(100,sd=.2))
hist(rnorm(100,sd=.2))
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sinx(x)
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sin(x)
y1 <- x + sin(x) + rnorm(100,sd=.2)
hist(y)
hist(y1)
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sin(x)
y1 <- x + sin(x) + rnorm(100,sd=.2)
par(mfrow = c(2, 2))
hist(y)
hist(y1)
plot(y)
plot(y1)
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sin(x)
y1 <- x + sin(x) + rnorm(100,sd=.2)
y3 <-  x+ rnorm(100,sd=.2)
par(mfrow = c(3, 3))
hist(y)
hist(y1)
hist(y3)
plot(y)
plot(y1)
plot(y3)
dt_chk <- data.frame('x'= x,'y'=y ,'y2'=y2, 'y3'=y3)
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sin(x)
y1 <- x + sin(x) + rnorm(100,sd=.2)
y2 <-  x+ rnorm(100,sd=.2)
par(mfrow = c(3, 3))
hist(y)
hist(y1)
hist(y2)
plot(y)
plot(y1)
plot(y2)
dt_chk <- data.frame('x'= x,'y'=y ,'y1'=y1, 'y2'=y2)
dt_chk
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point(size = 3, color = "blue" , alpha = .3)
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g = g + facet_grid(y)
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g = g + facet_grid(x)
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
# lets build the model
model3 <- lm(y~x,dt_chk)
par(mfrow = c(2, 2))
plot(model3)
# lets build the model
model3 <- lm(y1~x,dt_chk)
par(mfrow = c(2, 2))
plot(model3)
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + geom_tile(" Value for Y ")
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + title(" Value for Y ")
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y1 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y1 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y2 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sin(x)
y1 <- x + sin(x) + rnorm(100,sd=.2)
y2 <-  x
par(mfrow = c(3, 3))
hist(y)
hist(y1)
hist(y2)
plot(y)
plot(y1)
plot(y2)
dt_chk <- data.frame('x'= x,'y'=y ,'y1'=y1, 'y2'=y2)
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y1 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y2 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
# lets build the model
model3 <- lm(y~x,dt_chk)
model4 <- lm(y1~x,dt_chk)
model5 <- lm(y2~x,dt_chk)
par(mfrow = c(2, 2))
plot(model3)
plot(model4)
plot(model5)
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sin(x)
y1 <- x + sin(x) + rnorm(100,sd=.2)
y2 <-  x + rnorm(100,sd=.2)
par(mfrow = c(3, 3))
hist(y)
hist(y1)
hist(y2)
plot(y)
plot(y1)
plot(y2)
dt_chk <- data.frame('x'= x,'y'=y ,'y1'=y1, 'y2'=y2)
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y1 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y2 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
# lets build the model
model3 <- lm(y~x,dt_chk)
model4 <- lm(y1~x,dt_chk)
model5 <- lm(y2~x,dt_chk)
par(mfrow = c(2, 2))
plot(model3)
plot(model4)
plot(model5)
summary(model3)
# Sum of residual must be zero
sum(resid(model3))
# Sum of Residual multiplyied by Regression Variable  shoud be zero
sum(resid(model3) * x)
# Sum of residual must be zero
sum(resid(model3))
# Sum of Residual multiplyied by Regression Variable  shoud be zero
sum(resid(model3) * x)
# Sum of residual must be zero
sum(resid(model5))
# Sum of Residual multiplyied by Regression Variable  shoud be zero
sum(resid(model5) * x)
summary(cars)
model1 <- lm(dist~speed,cars)
par(mfrow = c(3, 3))
plot(model1)
model1 <- lm(dist~speed,cars)
par(mfrow = c(2, 2))
plot(model1)
model1 <- lm(dist~speed,cars)
# par(mfrow = c(2, 2))
plot(model1)
model1 <- lm(dist~speed,cars)
# par(mfrow = c(2, 2))
plot(model1)
model1 <- lm(dist~speed,cars)
# par(mfrow = c(2, 2))
summary(model1)
plot(model1)
plot(model1)
# same Plot but moving it in center so that we can clearly see residuals
ggplot(cars, aes(x = speed, y = e)) +
# geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = speed, yend = 0), color ="red", alpha = .2) +
ylab("Residual Disatance in Ft") +
# > Color adjustments made here...
geom_point(aes(color = abs(e))) + # Color mapped to abs(residuals)
scale_color_continuous(low = "black", high = "red") +  # Colors to use here
guides(color = FALSE) +  # Color legend removed
# <
# geom_point(aes(y = yhat), shape = 1) +
theme_bw()
# same Plot but moving it in center so that we can clearly see residuals
ggplot(cars, aes(x = speed, y = e)) +
# geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = speed, yend = 0), color ="red", alpha = .2) +
ylab("Residual Disatance in Ft") +
# > Color adjustments made here...
geom_point(aes(color = abs(e))) + # Color mapped to abs(residuals)
scale_color_continuous(low = "black", high = "red") +  # Colors to use here
guides(color = FALSE) +  # Color legend removed
# <
# geom_point(aes(y = yhat), shape = 1) +
theme_bw()
# same Plot but moving it in center so that we can clearly see residuals
ggplot(cars, aes(x = speed, y = e)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = speed, yend = 0), color ="red", alpha = .2) +
ylab("Residual Disatance in Ft") +
# > Color adjustments made here...
geom_point(aes(color = abs(e))) + # Color mapped to abs(residuals)
scale_color_continuous(low = "black", high = "red") +  # Colors to use here
guides(color = FALSE) +  # Color legend removed
# <
# geom_point(aes(y = yhat), shape = 1) +
theme_bw()
coef(model1)
# lets build the model
model3 <- lm(y~x,dt_chk)
model4 <- lm(y1~x,dt_chk)
model5 <- lm(y2~x,dt_chk)
par(mfrow = c(2, 2))
plot(model3)
plot(model4)
plot(model5)
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sin(x)
y1 <- x + sin(x) + rnorm(100,sd=.2)
y2 <-  x + rnorm(100,sd=.2)
par(mfrow = c(3, 3))
hist(y)
hist(y1)
hist(y2)
plot(y)
plot(y1)
plot(y2)
dt_chk <- data.frame('x'= x,'y'=y ,'y1'=y1, 'y2'=y2)
ggplot(cars, aes(x = speed, y = dist)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = speed, yend = yhat), alpha = .2) +
# > Color adjustments made here...
geom_point(aes(color = abs(e))) + # Color mapped to abs(residuals)
scale_color_continuous(low = "black", high = "red") +  # Colors to use here
guides(color = FALSE) +  # Color legend removed
# <
geom_point(aes(y = yhat), shape = 1) +
theme_bw()
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sin(x)
y1 <- x + sin(x) + rnorm(100,sd=.2)
y2 <-  x + rnorm(100,sd=.2)
par(mfrow = c(3, 3))
hist(y)
hist(y1)
hist(y2)
plot(y)
plot(y1)
plot(y2)
dt_chk <- data.frame('x'= x,'y'=y ,'y1'=y1, 'y2'=y2)
# Trying to see Residual with different data set that is not linear.
x <- runif(100,-3,3) # Genrate 100 data points between 3 and -3
y <-  x + sin(x)
y1 <- x + sin(x) + rnorm(100,sd=.2)
y2 <-  x + rnorm(100,sd=.2)
dt_chk <- data.frame('x'= x,'y'=y ,'y1'=y1, 'y2'=y2)
head(dt_chk )
par(mfrow = c(3, 3))
hist(y)
hist(y1)
hist(y2)
plot(y)
plot(y1)
plot(y2)
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y1 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y2 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y1 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
g = ggplot(dt_chk,aes(x = x, y= y))
g = g + xlab("Speed") + ggtitle(" Value for Y2 ")
g = g + ylab("Distance")
# g = g + geom_point(size = 7, color = "black" , alpha = .6)
# g = g + geom_point( aes(x = x, y= y),size = 3, color = "blue" , alpha = .3)
# g = g + geom_point( aes(x = x, y= y1),size = 2, color = "green" , alpha = .3)
g = g + geom_point( aes(x = x, y= y2),size = 1, color = "red" , alpha = .3)
# g = g + geom_point(size = 3, color = "red" , alpha = .3))
g = g + geom_smooth(method = "lm", color = "gray")
g
plot(model3)[1]
plot(resid(model3),x)
plot(resid(model3),y)
plot(resid(model3),predict(model3))
plot(predict(model3),resid(model3))
abline(0,0)

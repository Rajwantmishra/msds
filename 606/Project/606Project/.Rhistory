# To assess whether the linear model is reliable, we need to check for
#(1) linearity,
#(2) nearly normal residuals, and
#(3) constant variability.
#(4) Residuals are independent
# Residual = Observed value - Predicted value
library(DATA606)
plot_ss(x = lm_cust_s2$Order_Qty, y = lm_pbm$residuals,showSquares = TRUE)
# # (1) Linear association: The residuals plot shows a random scatter.
#Based on the plot we can clearly say that there is apparent pattern in the distribution as the numbers appear to be group and outlier are close to the regression line, so it can be treated as strong corelation and can be considered as a linear relationship.
# # (2) Nearly normal residuals: To check this condition, we can look at a histogram
hist(lm_pbm$residuals)
# or a normal probability plot of the residuals.
#It seems the plot is slightly skewed left,
qqnorm(lm_pbm$residuals)
qqline(lm_pbm$residuals)  # adds diagonal line to the normal prob plot
# (3) we can say that its also  Nearly normal residuals even though its right skewed with few outliers .
# (4)Residuals can be treated as independent as sample is drawn from independent .
# plot on sample
ggplot(data = lm_cust_s2,mapping = aes(y=lm_cust_s2$Order_Qty ,x= lm_cust_s2$promo))+ geom_point() + geom_smooth(method = "lm",se=FALSE) + geom_abline(slope = lm_pbm$coefficients[8], intercept = lm_pbm$coefficients[1], color="red")
# regression Line population data of 2 year.
(ggplot(data = mkt_Data,mapping = aes(y=mkt_Data$`Order Quantity` ,x= mkt_Data$`External Description`))+ geom_point() + geom_smooth(method = "lm",se=FALSE) + geom_abline(slope = lm_pbm$coefficients[8], intercept = lm_pbm$coefficients[1], color="red") )
# Lets plot on by Order Date
# To assess whether the linear model is reliable, we need to check for
#(1) linearity,
#(2) nearly normal residuals, and
#(3) constant variability.
#(4) Residuals are independent
#
plot_ss(x = lm_cust_s2$Order_Qty, y = lm_pd$residuals,showSquares = TRUE) #  Linear association
hist(lm_pd$residuals) # Right skewed
qqnorm(lm_pd$residuals)
qqline(lm_pd$residuals) # very much on the regression line, Nearly normal residuals even though its right skewed
# On Sample
ggplot(data = lm_cust_s2,mapping = aes(y=lm_cust_s2$Order_Qty ,x= lm_cust_s2$`Order Date`))+ geom_point() + geom_smooth(method = "lm",se=FALSE) +
geom_abline(slope = lm_pd$coefficients[8], intercept = lm_pd$coefficients[1], color="green")+
geom_abline(slope = lm_pbm$coefficients[8], intercept = lm_pbm$coefficients[1], color="red")
# On Population
ggplot(data = mkt_Data,mapping = aes(y = mkt_Data$`Order Quantity`,x= mkt_Data$Brand))+ geom_point() + geom_smooth(method = "lm",se=FALSE) +  geom_abline(slope = lm_pd$coefficients[8], intercept = lm_pd$coefficients[1], color="red") +
geom_abline(slope = lm_pbm$coefficients[8], intercept = lm_pbm$coefficients[1], color="green")
install.packages("lmerTest")
library(lme4)
library(lmerTest)
head(lm_cust_s2)
# lm(formula = Order_Qty ~ Qt + promo + month, data = lm_cust_s2)
model1 <- lmer(Order_Qty ~ Qt + (1|KUNNR_NEW),data = lm_cust_s2)
anova(model1)
model2 <- lmer(Order_Qty ~ promo + (1|KUNNR_NEW),data = lm_cust_s2)
anova(model2)
summary(model2)
## 0.02895 *
model3 <- lmer(Order_Qty ~  city + (1|KUNNR_NEW),data = lm_cust_s2)
install.packages("lmerTest")
anova(model3)
summary(model3)
# install.packages("plotly")
# install.packages("Rcpp")
library(plotly)
library(Rcpp)
# install_github('ramnathv/rCharts', force= TRUE)
library(rCharts)
library(rCharts)
nPlot(Order_Qty ~   promo , type = 'multiBarChart',data=lm_cust_s2, type = "point")
nPlot(Order_Qty ~  Qt , group= 'promo', data=lm_cust_s2, type = "Bar")
# install.packages("sensitivity")
library(sensitivity)
sensitivity::morris(
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(DT)
library(stringr)
library(lubridate)
library(corrr)
library(psych)
library(readxl)
library("readr")
library(plotly)
library(lme4)
library(lmerTest)
lm_pbm
# Predict main train data
lm_pred_pbm <- predict(lm_pbm,lm_cust_t1)
lm_pbm1 <-  update(lm_pbm,lm_cust_t1)
# Predict main train data
lm_pred_pbm <- predict(lm_pbm1,lm_cust_t1)
lm_pbm1
# Predict main train data
lm_pred_pbm <- predict(lm_pbm,lm_cust_t1)
lm_pbm1$xlevels
lm_cust_t1
lm_cust_t1
glimpse(lm_cust_t1)
lm_pbm1 <-  update(lm_pbm,lm_cust_s2)
lm_pbm1
lm_pbm1$xlevels
lm_pbm1$xlevels[2]
lm_pbm1$xlevels[1]
lm_pbm1$xlevels[3]
update(lm_pbm,lm_cust_s2)$xlevels[3]
update(lm_pbm,lm_cust_t1)$xlevels[3]
# Predict main train data
lm_pred_pbm <- predict(lm_pbm,lm_cust_t1)
update(lm_pbm,lm_cust_t1)$xlevels[3]
update(lm_pbm,.~.,lm_cust_t1)$xlevels[3]
update(lm_pbm,.~.,lm_cust_t1)$xlevels
unique(lm_cust_t1$promo)
coef(update(lm_pbm,lm_cust_t1))
update(lm_pbm,lm_cust_t1)
update(lm_pbm,lm_cust_t1)$xlevels[1]
lm_cust
lm_pbm1$xlevels
lm_pbm1$xlevels[2]
lm_pbm1$xlevels[3]
plot(lm_pbm1)
plot(lm_pbm1)
plot(lm_pbm1)
plot(lm_pbm)
plot(lm_pd)
##--------------------------------------------Model 2
summary(lm_pd)
#Lets take two model and undersatnd its summary
##--------------------------------------------Model 1
summary(lm_pbm)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(DT)
library(stringr)
library(lubridate)
library(corrr)
library(psych)
library(readxl)
library(readr)
library(plotly)
library(lme4)
library(lmerTest)
mkt_Data
mkt_Data
#
mkt_Data <- mkt_Data[sample(nrow(mkt_Data),5000),]
head(mkt_Data)
head(mkt_Data[,-c(1,2,3,4,5,6,7,8,7)])
str(head(mkt_Data[,-c(1,2,3,4,5,6,7,8,7)]))
summary(head(mkt_Data[,-c(1,2,3,4,5,6,7,8,7)]))
summary((mkt_Data[,-c(1,2,3,4,5,6,7,8,7)]))
summary((mkt_Data[,-c(1,2,3,4,5,6,7,8,7)]))
# install.packages("lmerTest")
head(lm_cust_s2)
# lm(formula = Order_Qty ~ Qt + promo + month, data = lm_cust_s2)
model1 <- lmer(Order_Qty ~ Qt + (1|KUNNR_NEW),data = lm_cust_s2)
anova(model1)
model2 <- lmer(Order_Qty ~ promo + (1|KUNNR_NEW),data = lm_cust_s2)
anova(model2)
summary(model2)
## 0.02895 *
model3 <- lmer(Order_Qty ~  city + (1|KUNNR_NEW),data = lm_cust_s2)
anova(model3)
summary(model3)
# install.packages("plotly")
# install.packages("Rcpp")
library(plotly)
library(Rcpp)
# install_github('ramnathv/rCharts', force= TRUE)
library(rCharts)
library(rCharts)
nPlot(Order_Qty ~   promo , type = 'multiBarChart',data=lm_cust_s2, type = "point")
nPlot(Order_Qty ~  Qt , group= 'promo', data=lm_cust_s2, type = "Bar")
# install.packages("sensitivity")
library(sensitivity)
sensitivity::morris(
)
nPlot(Order_Qty ~   promo , type = 'multiBarChart',data=lm_cust_s2, type = "point")
nPlot(Order_Qty ~  Qt , group= 'promo', data=lm_cust_s2, type = "Bar")
nPlot(Order_Qty ~   promo , type = 'multiBarChart',data=lm_cust_s2, type = "point")
nPlot(Order_Qty ~  Qt , group= 'promo', data=lm_cust_s2, type = "Bar")
install.packages("RWordPress")
install.packages("XMLRPC")
install.packages("knitr2wp")
install.packages("knit2wp")
install.packages("knit2wp")
library(tidyverse)
library(RWordPress)
install.packages("RWordPress")
install.packages("RWordPress", repos="http://www.omegahat.org/R", build=TRUE)
library(tidyverse)
library(RWordPress)
install.packages("RWordPress", repos="http://www.omegahat.org/R", build=TRUE)
if (!require('RWordPress')) {
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
}
library(tidyverse)
library(RWordPress)
library(RCurl)
library(reshape2)
library(XMLRPC)
options(WordpressLogin = c(ap_support = 'l%zF)tFFIa^ay7q95xCpwCvX'),
WordpressURL = 'https://whatsq.com/xmlrpc.php')
postTitle = "Testpage from R resp. knitr"
fileName = "post-this-rmd-file-to-wordpress.Rmd"
postID = 13409 # for my test post
postID <- knit2wp(
input = fileName,
title = postTitle,
publish = FALSE,
action = "newPost",
publish= FALSE
)
library(knitr)
postID <- knit2wp(
input = fileName,
title = postTitle,
publish = FALSE,
action = "newPost",
publish= FALSE
)
postID <- knit2wp(
input = fileName,
title = postTitle,
publish = FALSE,
action = "newPost"
)
options(WordpressLogin = c(ap_support = 'l%zF)tFFIa^ay7q95xCpwCvX'),
WordpressURL = 'https://whatsq.com/xmlrpc.php')
postTitle = "Testpage from R resp. knitr"
fileName = "post-this-rmd-file-to-wordpress.Rmd"
postID = 13409 # for my test post
postID <- knit2wp(
input = fileName,
title = postTitle,
publish = FALSE,
action = "newPost"
)
knit2wp <- function(file) {
require(XML)
content <- readLines(file)
content <- htmlTreeParse(content, trim=FALSE)
## WP will add the h1 header later based on the title, so delete here
content$children$html$children$body$children$h1 <- NULL
content <- paste(capture.output(print(content$children$html$children$body,
indent=FALSE, tagSeparator="")),
collapse="\n")
content <- gsub("<?.body>", "", content)         # remove body tag
## enclose code snippets in SyntaxHighlighter format
content <- gsub("<?pre><code class=\"r\">", "\\[code lang='r'\\]\\\n",
content)
content <- gsub("<?pre><code class=\"no-highlight\">", "\\[code\\]\\\n",
content)
content <- gsub("<?pre><code>", "\\[code\\]\\\n", content)
content <- gsub("<?/code></pre>", "\\[/code\\]\\\n", content)
return(content)
}
postID <- knit2wp(
input = fileName,
title = postTitle,
publish = FALSE,
action = "newPost"
)
newPost(content=list(description=knit2wp('W7_607_Final.html'),
title='Workflow: Post R markdown to WordPress',
categories=c('R')),
publish=FALSE)
postID <- knit2wp(
input = 'W7_607_Final.html',
title = postTitle,
publish = FALSE,
action = "newPost"
)
postID <- knit2wp(
input = 'W7_607_Final.Rmd',
title = postTitle,
publish = FALSE,
action = "newPost"
)
postTitle
postID <- knit2wp(
input = 'W7_607_Final.Rmd',
title = "TESTR FROM WORDPRE",
publish = FALSE,
action = "newPost"
)
postID <- knit2wp(
input = 'W7_607_Final.Rmd',
title = "TESTR FROM WORDPRE",
publish = FALSE
)
knit2wp(
input = 'W7_607_Final.Rmd',
title = "TESTR FROM WORDPRE",
publish = FALSE
)
knit2wp(
input = 'W7_607_Final.Rmd',
title = "TESTR FROM WORDPRE",
publish = FALSE
)
postID <- knit2wp(
'W7_607_Final.Rmd',
title = "TESTR FROM WORDPRE",
publish = FALSE
)
postID <- knit2wp(
'W7_607_Final.Rmd',
"TESTR FROM WORDPRE",
publish = FALSE
)
postID <- knitr::knit2wp(
'W7_607_Final.Rmd',
"TESTR FROM WORDPRE",
publish = FALSE
)
postID <- knitr::knit2wp(
input = 'W7_607_Final.Rmd',
title = "TESTR FROM WORDPRE",
publish = FALSE
)
postID <- knitr::knit2wp(
input = "W7_607_Final.Rmd",
title = "TESTR FROM WORDPRE",
publish = FALSE
)
postID <- knitr::knit2wp(
input = "W7_607_Final.Rmd",
title = "TESTR FROM WORDPRE",
publish = FALSE
)
postID <- knitr::knit2wp(
input = 'W7_607_Final.Rmd',
title = 'TESTR FROM WORDPRE',
publish = FALSE
)
postID <- knit2wp(
input = 'W7_607_Final.html',
title = 'TESTR FROM WORDPRE',
publish = FALSE
)
postID <- knit2wp(
input = 'W7_607_Final.html',
publish = FALSE
)
postID <- knit2wp(
input = 'W7_607_Final.html',
publish = FALSE
)
fileName = "W7_607_Final.Rmd"
postTitle = "Testpage from R resp. knitr"
fileName = "W7_607_Final.Rmd"
postID = 13409 # for my test post
postID <- knit2wp(
input = fileName,
title = postTitle,
publish = FALSE,
action = "newPost"
)
postID <- knit2wp(
input = fileName,
title = postTitle,
publish = FALSE,
action = c("newPost"))
postID <- knitr::knit2wp(
input = fileName,
title = postTitle,
publish = FALSE,
action = c("newPost"))
fileName
knit2wp('W7_607_Final.Rmd', title = 'Blog Posting from R Markdown to WordPress',publish = FALSE)
knit2wp('W7_607_Final.Rmd', title = "Blog Posting from R Markdown to WordPress",publish = FALSE)
knit2wp('W7_607_Final.Rmd', publish = FALSE)
knit2wp('W7_607_Final.Rmd', title = "Blog Posting from R Markdown to WordPress", encoding = getOption("encoding"),publish = FALSE)
knit2wpCrayon <- function(input, title="A post from knitr", ...,
action=c("newPost", "editPost", "newPage"),
postid, encoding=getOption("encoding"),
upload=FALSE, publish=FALSE, write=TRUE)
{
out <- knit(input, encoding=encoding)
on.exit(unlink(out))
con <- file(out, encoding=encoding)
on.exit(close(con), add=TRUE)
content <- knitr:::native_encode(readLines(con, warn=FALSE))
content <- paste(content, collapse="n")
content <- markdown::markdownToHTML(text=content, fragment.only=TRUE)
content <- gsub("
(.+?)
",
"
\2
",
content)
content=knitr:::native_encode(content, "UTF-8")
title=knitr:::native_encode(title, "UTF-8")
if (write){
writeLines(text=content,
con=gsub(x=out, pattern="\.md$", replacement=".html"))
content <- gsub("(.+?)","\2",                    content)
knit2wpCrayon <- function(input, title="A post from knitr", ...,
action=c("newPost", "editPost", "newPage"),
postid, encoding=getOption("encoding"),
upload=FALSE, publish=FALSE, write=TRUE)
{
out <- knit(input, encoding=encoding)
on.exit(unlink(out))
con <- file(out, encoding=encoding)
on.exit(close(con), add=TRUE)
content <- knitr:::native_encode(readLines(con, warn=FALSE))
content <- paste(content, collapse="n")
content <- markdown::markdownToHTML(text=content, fragment.only=TRUE)
content <- gsub("(.+?)","\2",content)
content <- knitr:::native_encode(content, "UTF-8")
title <- knitr:::native_encode(title, "UTF-8")
if (write){
writeLines(text=content,
con=gsub(x=out, pattern="\.md$", replacement=".html"))
if (write){        writeLines(text=content,
con=gsub(x=out, pattern="\.md$", replacement=".html"))}
knit2wpCrayon <- function(input, title="A post from knitr", ...,
action=c("newPost", "editPost", "newPage"),
postid, encoding=getOption("encoding"),
upload=FALSE, publish=FALSE, write=TRUE)
{
out <- knit(input, encoding=encoding)
on.exit(unlink(out))
con <- file(out, encoding=encoding)
on.exit(close(con), add=TRUE)
content <- knitr:::native_encode(readLines(con, warn=FALSE))
content <- paste(content, collapse="n")
content <- markdown::markdownToHTML(text=content, fragment.only=TRUE)
content <- gsub("(.+?)","\2",content)
content <- knitr:::native_encode(content, "UTF-8")
title <- knitr:::native_encode(title, "UTF-8")
if (write){        writeLines(text=content,
con=gsub(x=out, pattern="\.md$", replacement=".html"))}
if (upload){
action=match.arg(action)
WPargs=list(content=list(description=content, title=title,
...), publish=publish)
if (action=="editPost")
WPargs=c(postid=postid, WPargs)
do.call("library", list(package="RWordPress", character.only=TRUE))
print(do.call(action, args=WPargs))
}
content <- native_encode(content, "UTF-8")
content <- gsub("(.+?)","\2",content)
knit2wpCrayon <- function(input, title="A post from knitr", ...,
action=c("newPost", "editPost", "newPage"),
postid, encoding=getOption("encoding"),
upload=FALSE, publish=FALSE, write=TRUE)
{
out <- knit(input, encoding=encoding)
on.exit(unlink(out))
con <- file(out, encoding=encoding)
on.exit(close(con), add=TRUE)
content <- knitr:::native_encode(readLines(con, warn=FALSE))
content <- paste(content, collapse="n")
content <- markdown::markdownToHTML(text=content, fragment.only=TRUE)
content <- gsub("(.+?)","\2",content)
content <- native_encode(content, "UTF-8")
title <- native_encode(title, "UTF-8")
if (write){        writeLines(text=content,
con=gsub(x=out, pattern="\.md$", replacement=".html"))}
knit2wpCrayon <- function(input, title="A post from knitr", ...,
action=c("newPost", "editPost", "newPage"),
postid, encoding=getOption("encoding"),
upload=FALSE, publish=FALSE, write=TRUE)
{
out <- knit(input, encoding=encoding)
on.exit(unlink(out))
con <- file(out, encoding=encoding)
on.exit(close(con), add=TRUE)
content <- knitr:::native_encode(readLines(con, warn=FALSE))
content <- paste(content, collapse="\n")
content <- markdown::markdownToHTML(text=content, fragment.only=TRUE)
content <- gsub("<pre><code class=\"([[:alpha:]]+)\">(.+?)</code></pre>",
"<pre class=\"lang:\\1 decode:true\">\\2</pre>",
content)
content=knitr:::native_encode(content, "UTF-8")
title=knitr:::native_encode(title, "UTF-8")
if (write){
writeLines(text=content,
con=gsub(x=out, pattern="\\.md$", replacement=".html"))
}
if (upload){
action=match.arg(action)
WPargs=list(content=list(description=content, title=title,
...), publish=publish)
if (action=="editPost")
WPargs=c(postid=postid, WPargs)
do.call("library", list(package="RWordPress", character.only=TRUE))
print(do.call(action, args=WPargs))
}
}
knit2wpCrayon("W7_607_Final.Rmd",
title = "Create blog posts from RStudio to Wordpress",
categories = c("R", "Programming"),
publish = FALSE, upload = FALSE)
knit2wpCrayon("W7_607_Final.Rmd",
title = "Create blog posts from RStudio to Wordpress",
categories = c("R", "Programming"),
publish = FALSE)
knit2wpCrayon("951250-inf_for_categorical_data.Rmd",
title = "Create blog posts from RStudio to Wordpress",
categories = c("R", "Programming"),
publish = FALSE)
knit2wpCrayon("951250-inf_for_categorical_data.html",
title = "Create blog posts from RStudio to Wordpress",
categories = c("R", "Programming"),
publish = FALSE)
newPost(content=list(description=knit2wp('951250-inf_for_categorical_data.html'),
title='Workflow: Post R markdown to WordPress',
categories=c('R')),
publish=FALSE)
knit2wp('W7_607_Final.Rmd', title = "Blog Posting from R Markdown to WordPress", encoding = getOption("encoding"),publish = FALSE)

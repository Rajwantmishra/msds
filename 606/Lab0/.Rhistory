sent_by_customer<- ddply(sent, c("SOrg.","Customer"), summarise, Count = sum( `Order Quantity`) )
sent_by_customer
#by Customer
sent_by_customer<- ddply(sent, c("SOrg.","Customer","Dv"), summarise, Count = sum( `Order Quantity`) )
sent_by_customer
glimpse(sent)
#by Customer
sent_by_customer<- ddply(sent, c("SOrg.","Customer","`First name`","Dv"), summarise, Count = sum( `Order Quantity`) )
sent_by_customer
sent_qty_brand_hr
glimpse(sent)
sent_qty_brand_hr2 <- ddply(sent, c("Dv","subHour","`Date in Format YYYYMMDD`"), summarise,
Qty = sum(`Order Quantity` ) )
sent_qty_brand_hr2
ggplot(sent_qty_brand_hr,mapping=aes(x=subHour,y=Qty,fill=Dv)) +
geom_col()
ggplot(sent_qty_brand_hr2,mapping=aes(x=subHour,y=Qty,fill=Dv)) +
geom_col()
sent_qty_brand_hr2
ggplot(sent_qty_brand_hr2,mapping=aes(x=subHour,y=Qty,fill=Dv)) +
geom_col()+ facet_wrap(~`Date in Format YYYYMMDD`)
ggplot(sent_qty_brand_hr2,mapping=aes(x=subHour,y=Qty,fill=Dv)) +
geom_col()+ facet_wrap(~`Date in Format YYYYMMDD`)
knitr::opts_chunk$set(echo = TRUE)
install.packages(c('openintro','OIdata','devtools','ggplot2','psych','reshape2',
'knitr','markdown','shiny'))
devtools::install_github("jbryer/DATA606")
knitr::opts_chunk$set(echo = TRUE)
install.packages(c('openintro','OIdata','devtools','ggplot2','psych','reshape2',
'knitr','markdown','shiny'))
devtools::install_github("jbryer/DATA606")
getwd
getwd()
setwd("C:\Users\951250\Documents\myR\MS\606\Lab0")
setwd("C:\\Users\\951250\\Documents\\myR\\MS\\606\\Lab0")
knitr::opts_chunk$set(echo = TRUE)
workDir <- getwd()
workDir
words
workdir
workDir <- getwd()
workdir
workDir
setwd("C://Users//951250//Documents//myR")
workDir <- getwd()
workDir
setwd("C:\\Users\\951250\\Documents\\myR\\MS\\606\\Lab0")
setwd("C:\\Users\\951250\\Documents\\myR\\MS\\606\\Lab0")
knitr::opts_chunk$set(echo = TRUE)
# install.packages(c('openintro','OIdata','devtools','ggplot2','psych','reshape2',
#                    'knitr','markdown','shiny'))
# devtools::install_github("jbryer/DATA606")
library(DATA606)
devtools::install_github('jbryer/DATA606')
devtools::install_github('jbryer/DATA606')
devtools::install_github('jbryer/DATA606')
devtools::install_github('jbryer/DATA606Spring2019')
startLab('Lab0')
devtools::install_github('jbryer/DATA606Spring2019')
sent_by_customer
mean(sent_by_customer)
mean(sent_by_customer$Count,sent_by_customer$Customer)
mean(sent_by_customer$Count~sent_by_customer$Customer)
ddply(sent, c("SOrg.","Customer","`First name`"), summarise, Count = sum( `Order Quantity`) )
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(tidyverse))
suppressWarnings(library(stringr))
suppressWarnings(library(data.table))
library(plyr)
library(XML)
library(crayon)
library(lubridate)
library(rjson)
library(readxl)
#install.packages("DT")
library(DT)
# Logo
# Define variable containing url
url <- "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Luxottica.svg/220px-Luxottica.svg.png"
# Logo
workDir <- getwd()
set
filePath = paste0(workDir,"/lux")
fileName <- list.files(path=filePath)
SpamData <- data.frame(NA)
# Only Data to consider
keep<- c("AR","BE","BV","DG","MU","PR","PS","TF","VA","VE")
#Event Timezone
etimezone<- "America/Tijuana"
# Read File
# names <- c("DRG", "ProviderID", "Name", "Address", "City", "State", "ZIP", "Region", "Discharges", "AverageCharges", "AverageTotalPayments",
#            "AverageMedicarePayments")
# types = 'ccccccccinnn'
#
# types = 'cccccccccnnccdcccddccc'
#
# inpatient <- read_tsv('http://594442.youcanlearnit.net/inpatient.tsv', col_names = names, skip=1, col_types = types)
#-----------------------------------------------------
#-------------------------Submitted Data--------------
#-----------------------------------------------------
ctype = c("text","text","text","text","text","numeric","numeric","text","text","text","text","text","text","text")
user <-  read_excel(path=paste0(filePath,"/","User.xlsx"),col_types = ctype)
# Remove all Deleted User
user <- user[-(which(user$DEL_IND=="X")),]
# combine user namne with First name and last name
user$full <- paste0(user$NAME_FIRST," ", user$NAME_LAST)
# sent_by_rep <- ddply(sent_by_rep,.(`Business Partner`),mutate,RNAME=as.character(user[which(user$AGENT_ID_ECC==`Business Partner`),c(15)]))
#-----------------------------------------------------
#-------------------------Submitted Data--------------
#-----------------------------------------------------
ctype =c("text","text","text","text","text","text","text","text","text","numeric","numeric","text","text","date","text","text","guess","date","guess","text","text","text")
sent <- read_excel(path=paste0(filePath,"/","sent.xlsx"),col_types = ctype)
glimpse(sent)
sent$`Time Stamp` <-  ymd_hms(sent$`Time Stamp` , tz = "UTC")
#format(ymd_hms("20190120162205",tz="UTC"),tz="CET")
glimpse(sent)
sent$`ZSFA_CARTS_HEAD-ZAEZET` <- paste(
str_pad(hour(sent$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
str_pad(minute(sent$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
str_pad(second(sent$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
sep=":")
#gsub("^([0-9]{1,2})", "0\\1\\2", hour(sent$`ZSFA_CARTS_HEAD-ZAEZET`))
# sent$subTime <- ymd_hms(
#     paste0(str_remove_all(sent$`Date in Format YYYYMMDD`,"-"),
#            str_remove_all(sent$`ZSFA_CARTS_HEAD-ZAEZET`,":"))
# )
sent$subTime <- ymd_hms(
paste0(str_remove_all(sent$`Date in Format YYYYMMDD`,"-"),
format(ymd_hms(paste0("2015-09-27", str_remove_all(sent$`ZSFA_CARTS_HEAD-ZAEZET`,":"))), format="%H:%M:%S",tz=etimezone))
)
glimpse(sent)
## Check
sent <- mutate(sent,keep= ifelse(Dv %in% keep,"Keep","Remove"))
sent <- sent[which(sent$keep=="Keep"),]
#sent[707:708,c(14,17)]
#-----------------------------------------------------
#-------------------------Saved Data--------------
#-----------------------------------------------------
ctype =c("text","text","text","text","text","text","text","text","text","numeric","numeric","text","text","date","text","text","guess","date","guess","text","text","text")
saved <- read_excel(path=paste0(filePath,"/","saved.xlsx"),col_types = ctype)
glimpse(saved)
saved$`Time Stamp` <-  ymd_hms(saved$`Time Stamp` , tz = "UTC")
glimpse(saved)
saved$`ZSFA_CARTS_HEAD-ZAEZET` <- saved$`ZSFA_CARTS_HEAD-ZAEZET` <- paste(
str_pad(hour(saved$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
str_pad(minute(saved$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
str_pad(second(saved$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
sep=":")
#gsub("^([0-9]{1,2})", "0\\1\\2", hour(sent$`ZSFA_CARTS_HEAD-ZAEZET`))
saved$saveTime <- print(saved$`Time Stamp`,tz="America/Tijuana")
saved$saveHour <- hour(saved$saveTime)
glimpse(saved)
#sent[229:235,c(14,17)]
#format = "%m/%d/%Y %H:%M"
#sent$`Time Stamp` <- as.POSIXct(as.numeric(x[1:5])*86400, origin="1899-12-30",tz="GMT")
#  sent$`Time Stamp` <- as.POSIXct((sent$`Time Stamp`)*86400, origin = "1900-01-01", tz = "UTC")
ddply(sent, c("SOrg.","Customer","`First name`"), summarise, Count = sum( `Order Quantity`) )
ddply(sent, c("SOrg.","Customer"), summarise, Count = sum( `Order Quantity`) )
mean(ddply(sent, c("SOrg.","Customer","`First name`","Dv"), summarise, Count = sum( `Order Quantity`) )$Customer)
mean(ddply(sent, c("SOrg.","Customer","`First name`","Dv"), summarise, Count = sum( `Order Quantity`) ))
sent_by_customer
mean(sent_by_customer$Count)
summery(sent_by_customer)
summarise(sent_by_customer)
summary(sent_by_customer)
summary(sent_by_customer$Customer)
summary(sent_by_customer)[3]
summary(sent_by_customer)[2]
summary(sent_by_customer)[,]
summary(sent_by_customer)[,3]
summary(sent_by_customer)[3,]
summary(sent_by_customer)[,]
summary(sent_by_customer)[5,]
summary(sent_by_customer)[,5]
count(unique(sent_by_customer$Customer))
sum(count(unique(sent_by_customer$Customer)))
mean(sent_by_customer$Customer))
mean(sent_by_customer$Customer)
mean(sent_by_customer$Customer)[,]
mean(sent_by_customer$Customer)
summary(sent_by_customer$Customer)
summarise(sent_by_customer$Customer)
summarise(sent_by_customer)[5,]
summarise(sent_by_customer)[,5]
summarise(sent_by_customer)
summary(sent_by_customer)[,5]
summary(sent_by_customer)[1,5]
summary(sent_by_customer)[3,5]
summary(sent_by_customer)[4,5]
summary(sent_by_customer)[4,5][2]
summary(sent_by_customer)[4,5]
aggregate(customer ~ count , sent_by_customer, mean)
sent_by_customer
aggregate(Customer ~ Count , sent_by_customer, mean)
aggregate(Count~Customer , sent_by_customer, mean)
summary(sent_by_customer)[4,5]
length(sent_by_customer$Customer)
length(sent_by_customer$Customer)[1]
length(sent_by_customer$Customer)
summary(sent_by_customer)[4,5]
splat(summary(sent_by_customer)[4,5],":")
mean(sent_by_customer$Count, na.rm=TRUE)
mean(sent_by_customer$Count)
sent_by_customer
#by Customer
sent_by_customer_only<- ddply(sent, c("SOrg.","Customer",), summarise, Count = sum( `Order Quantity`) )
#by Customer
sent_by_customer_only<- ddply(sent, c("SOrg.","Customer"), summarise, Count = sum( `Order Quantity`) )
# Customer COunt
length(sent_by_customer_only$Customer)
# Mean of COunt
mean(sent_by_customer_only$Count, na.rm=TRUE)
sent_by_customer_only
#by Customer
sent_by_customer_only<- ddply(sent, c("Customer"), summarise, Count = sum( `Order Quantity`) )
sent_by_customer_only
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(library(tidyverse))
suppressWarnings(library(stringr))
suppressWarnings(library(data.table))
library(plyr)
library(XML)
library(crayon)
library(lubridate)
library(rjson)
library(readxl)
#install.packages("DT")
library(DT)
# Logo
# Define variable containing url
url <- "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Luxottica.svg/220px-Luxottica.svg.png"
# Logo
workDir <- getwd()
set
filePath = paste0(workDir,"/lux")
fileName <- list.files(path=filePath)
SpamData <- data.frame(NA)
# Only Data to consider
keep<- c("AR","BE","BV","DG","MU","PR","PS","TF","VA","VE")
#Event Timezone
etimezone<- "America/Tijuana"
# Read File
# names <- c("DRG", "ProviderID", "Name", "Address", "City", "State", "ZIP", "Region", "Discharges", "AverageCharges", "AverageTotalPayments",
#            "AverageMedicarePayments")
# types = 'ccccccccinnn'
#
# types = 'cccccccccnnccdcccddccc'
#
# inpatient <- read_tsv('http://594442.youcanlearnit.net/inpatient.tsv', col_names = names, skip=1, col_types = types)
#-----------------------------------------------------
#-------------------------Submitted Data--------------
#-----------------------------------------------------
ctype = c("text","text","text","text","text","numeric","numeric","text","text","text","text","text","text","text")
user <-  read_excel(path=paste0(filePath,"/","User.xlsx"),col_types = ctype)
# Remove all Deleted User
user <- user[-(which(user$DEL_IND=="X")),]
# combine user namne with First name and last name
user$full <- paste0(user$NAME_FIRST," ", user$NAME_LAST)
# sent_by_rep <- ddply(sent_by_rep,.(`Business Partner`),mutate,RNAME=as.character(user[which(user$AGENT_ID_ECC==`Business Partner`),c(15)]))
#-----------------------------------------------------
#-------------------------Submitted Data--------------
#-----------------------------------------------------
ctype =c("text","text","text","text","text","text","text","text","text","numeric","numeric","text","text","date","text","text","guess","date","guess","text","text","text")
sent <- read_excel(path=paste0(filePath,"/","sent.xlsx"),col_types = ctype)
glimpse(sent)
sent$`Time Stamp` <-  ymd_hms(sent$`Time Stamp` , tz = "UTC")
#format(ymd_hms("20190120162205",tz="UTC"),tz="CET")
glimpse(sent)
sent$`ZSFA_CARTS_HEAD-ZAEZET` <- paste(
str_pad(hour(sent$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
str_pad(minute(sent$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
str_pad(second(sent$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
sep=":")
#gsub("^([0-9]{1,2})", "0\\1\\2", hour(sent$`ZSFA_CARTS_HEAD-ZAEZET`))
# sent$subTime <- ymd_hms(
#     paste0(str_remove_all(sent$`Date in Format YYYYMMDD`,"-"),
#            str_remove_all(sent$`ZSFA_CARTS_HEAD-ZAEZET`,":"))
# )
sent$subTime <- ymd_hms(
paste0(str_remove_all(sent$`Date in Format YYYYMMDD`,"-"),
format(ymd_hms(paste0("2015-09-27", str_remove_all(sent$`ZSFA_CARTS_HEAD-ZAEZET`,":"))), format="%H:%M:%S",tz=etimezone))
)
glimpse(sent)
## Check
sent <- mutate(sent,keep= ifelse(Dv %in% keep,"Keep","Remove"))
sent <- sent[which(sent$keep=="Keep"),]
#sent[707:708,c(14,17)]
#-----------------------------------------------------
#-------------------------Saved Data--------------
#-----------------------------------------------------
ctype =c("text","text","text","text","text","text","text","text","text","numeric","numeric","text","text","date","text","text","guess","date","guess","text","text","text")
saved <- read_excel(path=paste0(filePath,"/","saved.xlsx"),col_types = ctype)
glimpse(saved)
saved$`Time Stamp` <-  ymd_hms(saved$`Time Stamp` , tz = "UTC")
glimpse(saved)
saved$`ZSFA_CARTS_HEAD-ZAEZET` <- saved$`ZSFA_CARTS_HEAD-ZAEZET` <- paste(
str_pad(hour(saved$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
str_pad(minute(saved$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
str_pad(second(saved$`ZSFA_CARTS_HEAD-ZAEZET`), 2, side="left",pad="0"),
sep=":")
#gsub("^([0-9]{1,2})", "0\\1\\2", hour(sent$`ZSFA_CARTS_HEAD-ZAEZET`))
saved$saveTime <- print(saved$`Time Stamp`,tz="America/Tijuana")
saved$saveHour <- hour(saved$saveTime)
glimpse(saved)
#sent[229:235,c(14,17)]
#format = "%m/%d/%Y %H:%M"
#sent$`Time Stamp` <- as.POSIXct(as.numeric(x[1:5])*86400, origin="1899-12-30",tz="GMT")
#  sent$`Time Stamp` <- as.POSIXct((sent$`Time Stamp`)*86400, origin = "1900-01-01", tz = "UTC")
Del_cart <- which(saved$`Deletion Indicator`=="X")
saved <- saved[-Del_cart,]
saved_by_org <- ddply(saved, "SOrg.", summarise, Count = sum( `Order Quantity`) )
names(saved_by_org ) <-c("Org","Unit")
sprintf("Total Unit Saved : %s in CART",sum(saved_by_org$Unit))
sprintf("Total Unit in Saved %s CART",sum(saved_by_org$Unit))
glimpse(sent)
summary(sent)
d<- count(sent,  c("Surrogate_key","Material")) %>% .[order(.$freq,decreasing = TRUE),]
# h <- count(sent,  c("SOrg.","`ZSFA_CARTS_HEAD-ZAEZET`")) %>% .[order(.$freq,decreasing = TRUE),]
#d[order(d$freq,decreasing = TRUE),]  sent$subTime
sent$subHour <- hour(sent$subTime)
#
#
# count(sent,  c("SOrg.","subHour","Surrogate_key")) %>% .[order(.$freq,decreasing = TRUE),]
sent_by_org <- ddply(sent, "SOrg.", summarise, Count = sum( `Order Quantity`) )
names(sent_by_org ) <-c("Org","Unit")
sprintf("Total Unit Ordered %s",sum(sent_by_org$Unit))
#alternate Qty by Org
aggregate(list("Total Qty" = sent$`Order Quantity` ),by=list( "Org " = sent$SOrg.),sum)
# --- By Date
sent_by_org_date <- ddply(sent, c("SOrg.","`Date in Format YYYYMMDD`"), summarise, Count = sum( `Order Quantity`) )
names(sent_by_org_date ) <-c("Org","Date","Unit")
# --- By Date
sent_qty_brand <-ddply(sent, "Dv", summarise,
Qty = sum(`Order Quantity` ) )
sent_qty_brand
sent_qty_brand_hr <- ddply(sent, c("Dv","subHour"), summarise,
Qty = sum(`Order Quantity` ) )
sent_qty_brand_hr
sent_qty_brand_hr2 <- ddply(sent, c("Dv","subHour","`Date in Format YYYYMMDD`"), summarise,
Qty = sum(`Order Quantity` ) )
sent_qty_brand_hr
ggplot(sent_qty_brand_hr,mapping=aes(x=subHour,y=Qty,fill=Dv)) +
geom_col()
sent_by_rep <- ddply(sent, c("SOrg.","`Business Partner`"), summarise, Count = sum( `Order Quantity`) )
#Add Name of the Rep as column in here
sent_by_rep <- ddply(sent_by_rep,.(`Business Partner`),mutate,Rep_Name =as.character(user[which(user$AGENT_ID_ECC==`Business Partner`),c(15)]))
#sort Data
sent_by_rep[order(sent_by_rep$Count,decreasing = TRUE),]
#by Customer
sent_by_customer<- ddply(sent, c("SOrg.","Customer","`First name`","Dv"), summarise, Count = sum( `Order Quantity`) )
#by Customer
sent_by_customer_only<- ddply(sent, c("Customer"), summarise, Count = sum( `Order Quantity`) )
#---------------Heder  subset(sent,select = c(1:6))
h2_cart <- select(sent,c("Surrogate_key","SOrg."))  %>%
distinct(.) %>%
count(2)
names(h2_cart)<- c("Sales Org","Cart")
h2_cart
h2_cart_save <- select(saved,c("Surrogate_key","SOrg."))  %>%
distinct(.) %>%
count(2)
names(h2_cart_save)<- c("Sales Org","Cart")
h2_cart
h2 <- select(sent,c("Surrogate_key","SOrg.","subHour"))  %>%
distinct(.) %>%
count(c(2,3))
names(h2)<- c("Sales Org","HOUR","Cart")
h2
ggplot(h2,mapping=aes(x=HOUR,y=Cart,fill=`Sales Org`)) +
geom_col()+
ggtitle("Cart in Hour by ORG")
# Customer COunt
length(sent_by_customer_only$Customer)
# Mean of COunt
mean(sent_by_customer_only$Count, na.rm=TRUE)
datatable(sent_by_org_date,caption="Total Unit by Org / Date", style = 'bootstrap', class = 'table-bordered table-condensed',autoHideNavigation = TRUE,rownames = FALSE,options = list(sDom  = '<"top"><"bottom">')) %>% formatStyle(
'Unit',
backgroundColor = styleEqual(c("US80", "CA80"), c('gray', 'yellow'),'yellow'))
# print(sent_by_org)
#install.packages("DT")
library(DT)
datatable(sent_by_org,caption="Total Unit by Org", style = 'bootstrap', class = 'table-bordered table-condensed',autoHideNavigation = TRUE,rownames = FALSE,options = list(sDom  = '<"top"><"bottom">')) %>% formatStyle(
'Unit',
backgroundColor = styleEqual(c("US80", "CA80"), c('gray', 'yellow'),'yellow'))
datatable(saved_by_org,caption="Total Unit by Org", style = 'bootstrap', class = 'table-bordered table-condensed',autoHideNavigation = TRUE,rownames = FALSE,options = list(searching = FALSE)) %>% formatStyle(
'Unit',
backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'),'red'))
# datatable(sent_by_org,caption="Total Unit by Org", class = 'cell-border stripe', width = 400,autoHideNavigation = TRUE,rownames = FALSE,options = list(sDom  = '<"top"><"bottom">')) %>% formatStyle(
#   'Unit',
#   backgroundColor = styleEqual(c(0, 1), c('gray', 'yellow'),'yellow'))
# filter="top", selection="multiple", escape=FALSE,
#       options = list(sDom  = '<"top">lrt<"bottom">ip')
datatable(sent_qty_brand,caption="Qty by Brand", style = 'bootstrap', class = 'table-bordered table-condensed',autoHideNavigation = TRUE,rownames = FALSE,options = list(searching = FALSE))
datatable(sent_qty_brand_hr,caption="Qty by Hr", style = 'bootstrap', class = 'table-bordered table-condensed',autoHideNavigation = TRUE,rownames = FALSE,options = list(searching = FALSE))
# sent_by_rep[order(sent_by_rep$Count,decreasing = TRUE),]
datatable(sent_by_rep,caption="Qty by Hr", style = 'bootstrap', class = 'table-bordered table-condensed',autoHideNavigation = TRUE,rownames = FALSE)
datatable(sent_by_customer)
ggplot(sent_qty_brand_hr2,mapping=aes(x=subHour,y=Qty,fill=Dv)) +
geom_col()+ facet_wrap(~`Date in Format YYYYMMDD`)
sent_qty_brandType_hr <- mutate(sent_qty_brand_hr,"Dv", TYPEBRAND= ifelse(Dv  %in% c("RB", "RX", "RJ", "OO", "DG", "EA", "HC", "MK", "MU"), "Lux", "In HOuse")) %>%
ddply( c("TYPEBRAND","subHour"), summarise,
Qty = sum(`Qty` ) )
# Brand Grouping
# ggplot(sent_qty_brandType_hr, mapping=aes(x=subHour,y=Qty,fill=TYPEBRAND)) +
# geom_col()
#
ggplot(sent_qty_brand_hr,mapping=aes(x=subHour,y=Qty,fill=Dv)) +
geom_col()
sent_by_customer_only
mean(sent_by_customer_only)
mean(sent_by_customer_only$Count)
mean(sent_by_customer_only)
unique(sent_by_customer_only$Customer)
install.packages(c('openintro','OIdata','devtools','ggplot2','psych','reshape2',
'knitr','markdown','shiny'))
devtools::install_github("jbryer/DATA606")
devtools::install_github("jbryer/DATA606", force = TRUE)
devtools::install_github('jbryer/DATA606Spring2019')
devtools::install_github("jbryer/DATA606Spring2019")
startLab('Lab0')
library(DATA606)
startLab('Lab0')
setwd("~/myR/MS/606/Lab0")
setwd("~/myR/MS/606/Lab0/Lab0")
source("more/arbuthnot.R")
arbuthnot
dim(arbuthnot)
names(arbuthnot)
arbuthnot$boys
plot(x = arbuthnot$year, y = arbuthnot$girls)
plot(x = arbuthnot$year, y = arbuthnot$girls, type = "l")
?plot
5218 + 4683
arbuthnot$boys + arbuthnot$girls
plot(arbuthnot$year, arbuthnot$boys + arbuthnot$girls, type = "l")
5218 / 4683
arbuthnot$boys / arbuthnot$girls
5218 / (5218 + 4683)
arbuthnot$boys / (arbuthnot$boys + arbuthnot$girls)
arbuthnot$boys > arbuthnot$girls
source("more/present.R")
arbuthnot
sum(arbuthnot$girls)
plot(x = arbuthnot$year, y = arbuthnot$boys, type = "l")
plot(x = arbuthnot$year, y = arbuthnot$boys, type = "l")
plot(arbuthnot$year, arbuthnot$boys + arbuthnot$girls, type = "l")
plot(x = arbuthnot$year, y = arbuthnot$boys, type = "l")
source("more/present.R")
present
head(present)
dim(present)
unique(present$year)
summary(present)
str(present)
summary(arbuthnot)
mean(present$boys)/mean(arbuthnot$boys)*100
700/100*100
mean(present$boys)/mean(arbuthnot$boys)*100
plot(x = present$year, y = present$boys, type = "l")
plot(x = present$year, y = present$boys, type = "l")
plot(x = present$year, y = present$boys, fill=  present$boys,type = "l")
plot(x = present$year, y = present$boys, col=  present$boys,type = "l")
plot(x = present$year, y = present$girls
, type = "l")
plot(x = present$year, y = present$boys, type = "l")
plot(x = present$year, y = present$girls
, type = "l")
summary(present$boys)> summary(present$girls)
sum(present$boys)
sum(present$girls)
sum(present$boys)
sum(present$girls)
dif<- sum(present$boys) -sum(present$girls)
diff
dif
source("more/present.R")
head(present)
dim(present)
unique(present$year)
summary(present)
str(present)
plot(x = present$year, y = present$boys, type = "l")
plot(x = present$year, y = present$girls
, type = "l")
summary(present$boys)> summary(present$girls)
sum(present$boys)
sum(present$girls)
dif<- sum(present$boys) -sum(present$girls)
dif
sum(present$boys)
sum(present$girls)
dif<- sum(present$boys) -sum(present$girls)
dif
ratio(present$boys)
library(CNAnorm)
install.packages("CNAnorm")
library(CNAnorm)
library(CNAnorm)
library(ratios)
install.packages("ratios")
library(ratios)
ratioDT(present$boys,present$girls,present$year)
ratioDT(DT1=present$boys, DT2= present$girls,group1.vars = present$year)
ratio(DT1=present, DT2= present$girls,group1.vars = present$year)
ratioDT(present,arbuthnot, present$year)
ratioDT(present,arbuthnot, group1.vars=present$year)
ratioDT(present, group1.vars=present$year,group2.vars = (present$girls,present$boys))
ratioDT(present, group1.vars=present$year,group2.vars = c(present$girls,present$boys))
ratioDT(present, group1.vars=present$year,group2.vars = c(present$girls,present$boys))
prsent
present
is.na(present)
